App\Entity\Group:
  attributes:
    normalization_context:
      groups: [ group_read ]
  collectionOperations:
    post:
      method: POST
      security: is_granted("GROUP_CREATE")
      denormalization_context:
        groups: [ group_create ]
  itemOperations:
    get:
      method: GET
      security: is_granted("GROUP_READ", object)
    put:
      method: PUT
      security: is_granted("GROUP_UPDATE", object)
      denormalization_context:
        groups: [ group_update ]
    delete:
      method: DELETE
      security: is_granted("GROUP_DELETE", object)
    send_request:
      method: PUT
      path: /groups/{id}/send_request
      controller: App\Api\Action\Group\SendRequestToUser
      deserialize: false
      openapi_context:
        summary: Send a group request to a user
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    required: true
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
     
  properties:
    users:
      subresource:
        resourceClass: App\Entity\User
        collection: true
        maxDepth: 1

