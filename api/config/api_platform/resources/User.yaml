App\Entity\User:
  attributes:
    normalization_context:
      groups: [ user_read ]
  collectionOperations:
    register:
      method: POST
      path: /users/register
      controller: App\Api\Action\User\Register
      denormalization_context:
        groups: [ user_register ]
      openapi_context:
        summary: Register a new user
    resend_activation_email:
      method: POST
      path: /users/resend_activation_email
      controller: App\Api\Action\User\ResendActivationEmail
      deserialize: false
      openapi_context:
        summary: Sends activation email to inactive user
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    required: true
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
    login:
      method: POST
      route_name: api_login_check
      openapi_context:
        summary: Login a user in the API
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    token:
                      type: string
    request_reset_password:
      method: POST
      path: /users/request_reset_password
      controller: App\Api\Action\User\RequestResetPassword
      deserialize: false
      openapi_context:
        summary: Request an email with a URL to reset a user password
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    required: true
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
    upload_avatar:
      method: POST
      path: /users/{id}/avatar
      controller: App\Api\Action\User\UploadAvatar
      deserialize: false
      openapi_context:
        summary: Updates the user avatar
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  avatar:
                    type: string
                    format: binary
    facebook_auth:
      method: POST
      path: /users/facebook/auth
      controller: App\Api\Action\Facebook\Authorization
      deserialize: false
      openapi_context:
        summary: OAuth with Facebook
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    required: true
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    token:
                      type: string
  itemOperations:
    get:
      method: GET
      security: is_granted("USER_READ", object)
    put:
      method: PUT
      security: is_granted("USER_UPDATE", object)
      denormalization_context:
        groups: [ user_update ]
    delete:
      method: DELETE
      security: is_granted("USER_DELETE", object)
    activate:
      method: PUT
      path: /users/{id}/activate
      controller: App\Api\Action\User\ActivateAccount
      deserialize: false
      denormalization_context:
        groups: [ user_activate ]
      openapi_context:
        summary: Activates a user
    reset_password:
      method: PUT
      path: /users/{id}/reset_password
      controller: App\Api\Action\User\ResetPassword
      deserialize: false
      openapi_context:
        summary: Reset user password
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  resetPasswordToken:
                    type: string
                    required: true
                  password:
                    type: string
                    required: true
        responses:
          200:
            description: OK
            content:
              application/ld+json:
                schema:
                  $ref: '#/components/schemas/User:jsonld-user_read'
    change_password:
      method: PUT
      path: /users/{id}/change_password
      controller: App\Api\Action\User\ChangePassword
      deserialize: false
      openapi_context:
        summary: Changes user password
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  oldPassword:
                    type: string
                    required: true
                  newPassword:
                    type: string
                    required: true
  properties:
    groups:
      subresource:
        resourceClass: App\Entity\Group
        collection: true
        maxDepth: 1
    categories:
      subresource:
        resourceClass: App\Entity\Category
        collection: true
        maxDepth: 1
    movements:
      subresource:
        resourceClass: App\Entity\Movement
        collection: true
        maxDepth: 1
